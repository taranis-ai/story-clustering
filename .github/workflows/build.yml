name: Build Package

on:
  push:
    branches:
      - master
    tags:
      - "**"
  workflow_dispatch:
  pull_request:

permissions:
  packages: write
  contents: write
  id-token: write

jobs:
  test:
    name: pytest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        run: uv python install

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Lint with ruff
        run: uv run ruff check --output-format=github .

      - name: Run tests
        run: uv run pytest



  build_container:
    name: Build and Push Container
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'push'
    strategy:
      matrix:
        model: [tfidf]
        os: [ubuntu-latest, ubuntu-24.04-arm]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set GHCR Owner Variable
        id: set_env
        run: echo "GHCR_OWNER=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV

      - name: Set metadata for ${{ matrix.model }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.GHCR_OWNER }}/taranis-story-clustering-bot
          tags: |
            type=ref,event=tag
            type=raw,value=${{ matrix.model }}
            type=raw,value=latest

      - name: Build and push container for ${{ matrix.model }}
        uses: docker/build-push-action@v6
        with:
          file: Containerfile
          push: true
          platforms: ${{ matrix.os == 'ubuntu-latest' && 'linux/amd64' || 'linux/arm64' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILDKIT_CONTEXT_KEEP_GIT_DIR=true
            MODEL=${{ matrix.model }}
          cache-from: type=registry,ref=ghcr.io/${{ env.GHCR_OWNER }}/taranis-story-clustering-bot-cache:latest
          cache-to: type=registry,ref=ghcr.io/${{ env.GHCR_OWNER }}/taranis-story-clustering-bot-cache:latest,mode=max
